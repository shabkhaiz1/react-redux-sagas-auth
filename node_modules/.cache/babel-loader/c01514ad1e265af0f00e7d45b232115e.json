{"ast":null,"code":"import { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\nimport { SIGNIN_USER, SIGNOUT_USER } from \"../../constants/ActionTypes\";\nimport { userSignInSuccess, userSignOutSuccess } from \"../../appRedux/actions/Auth\";\nimport axios from \"../../config/axios\";\n\nconst signInUserWithEmailPasswordRequest = async payload => {\n  return axios.post(\"api/auth/login\", payload).then(response => response).catch(err => {\n    if (err && err.response.data) {\n      return err.response;\n    }\n  });\n};\n\nfunction* signInUserWithEmailPassword({\n  payload\n}) {\n  try {\n    const signInUser = yield call(signInUserWithEmailPasswordRequest, payload);\n\n    if (signInUser.data.success) {\n      localStorage.setItem(\"user_id\", payload.username);\n      yield put(userSignInSuccess(payload.username));\n    } else {\n      debugger;\n    }\n  } catch (error) {\n    debugger;\n  }\n}\n\nfunction* signOut() {\n  try {\n    yield put(userSignOutSuccess(\"SignOut\"));\n    localStorage.removeItem(\"user_id\");\n  } catch (error) {}\n}\n\nexport function* signInUser() {\n  yield takeEvery(SIGNIN_USER, signInUserWithEmailPassword);\n}\nexport function* signOutUser() {\n  yield takeEvery(SIGNOUT_USER, signOut);\n}\nexport default function* rootSaga() {\n  yield all([fork(signInUser), fork(signOutUser)]);\n}","map":{"version":3,"sources":["/home/shabkhaiz/dev/react-app-auth/src/appRedux/sagas/Auth.js"],"names":["all","call","fork","put","takeEvery","SIGNIN_USER","SIGNOUT_USER","userSignInSuccess","userSignOutSuccess","axios","signInUserWithEmailPasswordRequest","payload","post","then","response","catch","err","data","signInUserWithEmailPassword","signInUser","success","localStorage","setItem","username","error","signOut","removeItem","signOutUser","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,SAA/B,QAAgD,oBAAhD;AACA,SACIC,WADJ,EAEIC,YAFJ,QAGO,6BAHP;AAIA,SACIC,iBADJ,EAEIC,kBAFJ,QAGO,6BAHP;AAIA,OAAOC,KAAP,MAAkB,oBAAlB;;AAGA,MAAMC,kCAAkC,GAAG,MAAOC,OAAP,IAAmB;AAC1D,SAAOF,KAAK,CACPG,IADE,CACG,gBADH,EACqBD,OADrB,EAEFE,IAFE,CAEIC,QAAD,IAAcA,QAFjB,EAGFC,KAHE,CAGKC,GAAD,IAAS;AACZ,QAAIA,GAAG,IAAIA,GAAG,CAACF,QAAJ,CAAaG,IAAxB,EAA8B;AAC1B,aAAOD,GAAG,CAACF,QAAX;AACH;AACJ,GAPE,CAAP;AAQH,CATD;;AAaA,UAAUI,2BAAV,CAAsC;AAAEP,EAAAA;AAAF,CAAtC,EAAmD;AAC/C,MAAI;AACA,UAAMQ,UAAU,GAAG,MAAMlB,IAAI,CAACS,kCAAD,EAAqCC,OAArC,CAA7B;;AACA,QAAIQ,UAAU,CAACF,IAAX,CAAgBG,OAApB,EAA6B;AACzBC,MAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCX,OAAO,CAACY,QAAxC;AACA,YAAMpB,GAAG,CAACI,iBAAiB,CAACI,OAAO,CAACY,QAAT,CAAlB,CAAT;AACH,KAHD,MAGO;AACH;AACH;AACJ,GARD,CAQE,OAAOC,KAAP,EAAc;AACZ;AACH;AACJ;;AAED,UAAUC,OAAV,GAAoB;AAChB,MAAI;AACA,UAAMtB,GAAG,CAACK,kBAAkB,CAAC,SAAD,CAAnB,CAAT;AACAa,IAAAA,YAAY,CAACK,UAAb,CAAwB,SAAxB;AACH,GAHD,CAGE,OAAOF,KAAP,EAAc,CACf;AACJ;;AAED,OAAO,UAAUL,UAAV,GAAuB;AAC1B,QAAMf,SAAS,CAACC,WAAD,EAAca,2BAAd,CAAf;AACH;AAED,OAAO,UAAUS,WAAV,GAAwB;AAC3B,QAAMvB,SAAS,CAACE,YAAD,EAAemB,OAAf,CAAf;AACH;AAED,eAAe,UAAUG,QAAV,GAAqB;AAChC,QAAM5B,GAAG,CAAC,CACNE,IAAI,CAACiB,UAAD,CADE,EAENjB,IAAI,CAACyB,WAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n    SIGNIN_USER,\r\n    SIGNOUT_USER,\r\n} from \"../../constants/ActionTypes\";\r\nimport {\r\n    userSignInSuccess,\r\n    userSignOutSuccess\r\n} from \"../../appRedux/actions/Auth\";\r\nimport axios from \"../../config/axios\";\r\n\r\n\r\nconst signInUserWithEmailPasswordRequest = async (payload) => {\r\n    return axios\r\n        .post(\"api/auth/login\", payload)\r\n        .then((response) => response)\r\n        .catch((err) => {\r\n            if (err && err.response.data) {\r\n                return err.response;\r\n            }\r\n        });\r\n};\r\n\r\n\r\n\r\nfunction* signInUserWithEmailPassword({ payload }) {\r\n    try {\r\n        const signInUser = yield call(signInUserWithEmailPasswordRequest, payload);\r\n        if (signInUser.data.success) {\r\n            localStorage.setItem(\"user_id\", payload.username);\r\n            yield put(userSignInSuccess(payload.username));\r\n        } else {\r\n            debugger\r\n        }\r\n    } catch (error) {\r\n        debugger\r\n    }\r\n}\r\n\r\nfunction* signOut() {\r\n    try {\r\n        yield put(userSignOutSuccess(\"SignOut\"));\r\n        localStorage.removeItem(\"user_id\");\r\n    } catch (error) {\r\n    }\r\n}\r\n\r\nexport function* signInUser() {\r\n    yield takeEvery(SIGNIN_USER, signInUserWithEmailPassword);\r\n}\r\n\r\nexport function* signOutUser() {\r\n    yield takeEvery(SIGNOUT_USER, signOut);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        fork(signInUser),\r\n        fork(signOutUser),\r\n    ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}