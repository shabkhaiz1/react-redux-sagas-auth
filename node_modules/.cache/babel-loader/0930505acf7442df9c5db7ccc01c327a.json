{"ast":null,"code":"import createSagaMiddleware from \"redux-saga\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootSaga from \"../sagas/index\";\nimport createRootReducer from \"../reducers\";\nimport rootReducer from \"../reducers\"; // export default createStore(rootReducer);\n\nconst createBrowserHistory = require(\"history\").createBrowserHistory;\n\nexport const history = createBrowserHistory(); // const routeMiddleware = routerMiddleware(history);\n\nconst sagaMiddleware = createSagaMiddleware(); // const middlewares = [thunk, sagaMiddleware, routeMiddleware];\n\nexport default function configureStore(preloadedState) {\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const store = createStore(createRootReducer(history), // root reducer with router state\n  preloadedState // compose(\n  // composeEnhancers(\n  //   applyMiddleware(\n  //     routerMiddleware(history), // for dispatching history actions\n  //     ...middlewares\n  //   )\n  // )\n  );\n  sagaMiddleware.run(rootSaga);\n  return store;\n}","map":{"version":3,"sources":["/home/shabkhaiz/dev/react-app-auth/src/appRedux/store/index.js"],"names":["createSagaMiddleware","applyMiddleware","compose","createStore","thunk","rootSaga","createRootReducer","rootReducer","createBrowserHistory","require","history","sagaMiddleware","configureStore","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","run"],"mappings":"AAAA,OAAOA,oBAAP,MAAiC,YAAjC;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,iBAAP,MAA8B,aAA9B;AACA,OAAOC,WAAP,MAAwB,aAAxB,C,CAEA;;AAEA,MAAMC,oBAAoB,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBD,oBAAhD;;AAEA,OAAO,MAAME,OAAO,GAAGF,oBAAoB,EAApC,C,CAEP;;AACA,MAAMG,cAAc,GAAGX,oBAAoB,EAA3C,C,CAEA;;AAEA,eAAe,SAASY,cAAT,CAAwBC,cAAxB,EAAwC;AACrD,QAAMC,gBAAgB,GACpBC,MAAM,CAACC,oCAAP,IAA+Cd,OADjD;AAEA,QAAMe,KAAK,GAAGd,WAAW,CACvBG,iBAAiB,CAACI,OAAD,CADM,EACK;AAC5BG,EAAAA,cAFuB,CAGvB;AACA;AACA;AACA;AACA;AACA;AACA;AATuB,GAAzB;AAYAF,EAAAA,cAAc,CAACO,GAAf,CAAmBb,QAAnB;AACA,SAAOY,KAAP;AACD","sourcesContent":["import createSagaMiddleware from \"redux-saga\";\r\nimport { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootSaga from \"../sagas/index\";\r\nimport createRootReducer from \"../reducers\";\r\nimport rootReducer from \"../reducers\";\r\n\r\n// export default createStore(rootReducer);\r\n\r\nconst createBrowserHistory = require(\"history\").createBrowserHistory;\r\n\r\nexport const history = createBrowserHistory();\r\n\r\n// const routeMiddleware = routerMiddleware(history);\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\n// const middlewares = [thunk, sagaMiddleware, routeMiddleware];\r\n\r\nexport default function configureStore(preloadedState) {\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(\r\n    createRootReducer(history), // root reducer with router state\r\n    preloadedState,\r\n    // compose(\r\n    // composeEnhancers(\r\n    //   applyMiddleware(\r\n    //     routerMiddleware(history), // for dispatching history actions\r\n    //     ...middlewares\r\n    //   )\r\n    // )\r\n  );\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n  return store;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}