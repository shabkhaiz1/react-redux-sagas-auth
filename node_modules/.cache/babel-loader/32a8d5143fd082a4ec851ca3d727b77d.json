{"ast":null,"code":"import createSagaMiddleware from \"redux-saga\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport thunk from \"redux-thunk\";\nimport rootSaga from \"../sagas/index\";\nimport createRootReducer from \"../reducers\";\n\nconst createBrowserHistory = require(\"history\").createBrowserHistory;\n\nexport const history = createBrowserHistory();\nconst routeMiddleware = routerMiddleware(history);\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [thunk, sagaMiddleware, routeMiddleware];\nexport default function configureStore(preloadedState) {\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const store = createStore(createRootReducer(history), // root reducer with router state\n  preloadedState, // compose(\n  composeEnhancers(applyMiddleware(routerMiddleware(history), // for dispatching history actions\n  ...middlewares)));\n  sagaMiddleware.run(rootSaga);\n  return store;\n}","map":{"version":3,"sources":["/home/shabkhaiz/dev/react-app-auth/src/appRedux/store/index.js"],"names":["createSagaMiddleware","applyMiddleware","compose","createStore","routerMiddleware","thunk","rootSaga","createRootReducer","createBrowserHistory","require","history","routeMiddleware","sagaMiddleware","middlewares","configureStore","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","run"],"mappings":"AAAA,OAAOA,oBAAP,MAAiC,YAAjC;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,iBAAP,MAA8B,aAA9B;;AAEA,MAAMC,oBAAoB,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBD,oBAAhD;;AAEA,OAAO,MAAME,OAAO,GAAGF,oBAAoB,EAApC;AAEP,MAAMG,eAAe,GAAGP,gBAAgB,CAACM,OAAD,CAAxC;AACA,MAAME,cAAc,GAAGZ,oBAAoB,EAA3C;AAEA,MAAMa,WAAW,GAAG,CAACR,KAAD,EAAQO,cAAR,EAAwBD,eAAxB,CAApB;AAEA,eAAe,SAASG,cAAT,CAAwBC,cAAxB,EAAwC;AACrD,QAAMC,gBAAgB,GACpBC,MAAM,CAACC,oCAAP,IAA+ChB,OADjD;AAEA,QAAMiB,KAAK,GAAGhB,WAAW,CACvBI,iBAAiB,CAACG,OAAD,CADM,EACK;AAC5BK,EAAAA,cAFuB,EAGvB;AACAC,EAAAA,gBAAgB,CACdf,eAAe,CACbG,gBAAgB,CAACM,OAAD,CADH,EACc;AAC3B,KAAGG,WAFU,CADD,CAJO,CAAzB;AAYAD,EAAAA,cAAc,CAACQ,GAAf,CAAmBd,QAAnB;AACA,SAAOa,KAAP;AACD","sourcesContent":["import createSagaMiddleware from \"redux-saga\";\r\nimport { applyMiddleware, compose, createStore } from \"redux\";\r\nimport { routerMiddleware } from \"connected-react-router\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootSaga from \"../sagas/index\";\r\nimport createRootReducer from \"../reducers\";\r\n\r\nconst createBrowserHistory = require(\"history\").createBrowserHistory;\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nconst routeMiddleware = routerMiddleware(history);\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [thunk, sagaMiddleware, routeMiddleware];\r\n\r\nexport default function configureStore(preloadedState) {\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(\r\n    createRootReducer(history), // root reducer with router state\r\n    preloadedState,\r\n    // compose(\r\n    composeEnhancers(\r\n      applyMiddleware(\r\n        routerMiddleware(history), // for dispatching history actions\r\n        ...middlewares\r\n      )\r\n    )\r\n  );\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n  return store;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}