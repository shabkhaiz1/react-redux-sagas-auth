{"ast":null,"code":"import { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\nimport { SIGNIN_USER, SIGNOUT_USER } from \"../../constants/ActionTypes\";\nimport { userSignInSuccess, userSignOutSuccess } from \"../../appRedux/actions/Auth\"; // import axios from \"../../config/axios\";\n\nconst signInUserWithEmailPasswordRequest = async payload => {\n  if (payload[0] === 'shabkhaizmughal@gmail.com' && payload[1] === '123456') {\n    return true;\n  } else {\n    return false;\n  } // return axios\n  //     .post(\"api/auth/login\", payload)\n  //     .then((response) => response)\n  //     .catch((err) => {\n  //         if (err && err.response.data) {\n  //             return err.response;\n  //         }\n  //     });\n\n};\n\nfunction* signInUserWithEmailPassword({\n  payload\n}) {\n  try {\n    const signInUser = yield call(signInUserWithEmailPasswordRequest, payload);\n\n    if (signInUser) {\n      localStorage.setItem(\"user_id\", payload[0]);\n      yield put(userSignInSuccess(payload[0]));\n      console.log('Login Successfull');\n    } else {\n      console.log('Incorrect Credentials');\n    }\n  } catch (error) {}\n}\n\nfunction* signOut() {\n  try {\n    yield put(userSignOutSuccess(\"SignOut\"));\n    localStorage.removeItem(\"user_id\");\n  } catch (error) {}\n}\n\nexport function* signInUser() {\n  yield takeEvery(SIGNIN_USER, signInUserWithEmailPassword);\n}\nexport function* signOutUser() {\n  yield takeEvery(SIGNOUT_USER, signOut);\n}\nexport default function* rootSaga() {\n  yield all([fork(signInUser), fork(signOutUser)]);\n}","map":{"version":3,"sources":["/home/shabkhaiz/dev/react-app-auth/src/appRedux/sagas/Auth.js"],"names":["all","call","fork","put","takeEvery","SIGNIN_USER","SIGNOUT_USER","userSignInSuccess","userSignOutSuccess","signInUserWithEmailPasswordRequest","payload","signInUserWithEmailPassword","signInUser","localStorage","setItem","console","log","error","signOut","removeItem","signOutUser","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,SAA/B,QAAgD,oBAAhD;AACA,SACIC,WADJ,EAEIC,YAFJ,QAGO,6BAHP;AAIA,SACIC,iBADJ,EAEIC,kBAFJ,QAGO,6BAHP,C,CAIA;;AAGA,MAAMC,kCAAkC,GAAG,MAAOC,OAAP,IAAmB;AAC1D,MAAIA,OAAO,CAAC,CAAD,CAAP,KAAe,2BAAf,IAA8CA,OAAO,CAAC,CAAD,CAAP,KAAe,QAAjE,EAA2E;AACvE,WAAO,IAAP;AACH,GAFD,MAGK;AACD,WAAO,KAAP;AACH,GANyD,CAO1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACH,CAfD;;AAmBA,UAAUC,2BAAV,CAAsC;AAAED,EAAAA;AAAF,CAAtC,EAAmD;AAC/C,MAAI;AACA,UAAME,UAAU,GAAG,MAAMX,IAAI,CAACQ,kCAAD,EAAqCC,OAArC,CAA7B;;AACA,QAAIE,UAAJ,EAAgB;AACZC,MAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCJ,OAAO,CAAC,CAAD,CAAvC;AACA,YAAMP,GAAG,CAACI,iBAAiB,CAACG,OAAO,CAAC,CAAD,CAAR,CAAlB,CAAT;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEH,KALD,MAKO;AACHD,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH;AACJ,GAVD,CAUE,OAAOC,KAAP,EAAc,CACf;AACJ;;AAED,UAAUC,OAAV,GAAoB;AAChB,MAAI;AACA,UAAMf,GAAG,CAACK,kBAAkB,CAAC,SAAD,CAAnB,CAAT;AACAK,IAAAA,YAAY,CAACM,UAAb,CAAwB,SAAxB;AACH,GAHD,CAGE,OAAOF,KAAP,EAAc,CACf;AACJ;;AAED,OAAO,UAAUL,UAAV,GAAuB;AAC1B,QAAMR,SAAS,CAACC,WAAD,EAAcM,2BAAd,CAAf;AACH;AAED,OAAO,UAAUS,WAAV,GAAwB;AAC3B,QAAMhB,SAAS,CAACE,YAAD,EAAeY,OAAf,CAAf;AACH;AAED,eAAe,UAAUG,QAAV,GAAqB;AAChC,QAAMrB,GAAG,CAAC,CACNE,IAAI,CAACU,UAAD,CADE,EAENV,IAAI,CAACkB,WAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n    SIGNIN_USER,\r\n    SIGNOUT_USER,\r\n} from \"../../constants/ActionTypes\";\r\nimport {\r\n    userSignInSuccess,\r\n    userSignOutSuccess\r\n} from \"../../appRedux/actions/Auth\";\r\n// import axios from \"../../config/axios\";\r\n\r\n\r\nconst signInUserWithEmailPasswordRequest = async (payload) => {\r\n    if (payload[0] === 'shabkhaizmughal@gmail.com' && payload[1] === '123456') {\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n    // return axios\r\n    //     .post(\"api/auth/login\", payload)\r\n    //     .then((response) => response)\r\n    //     .catch((err) => {\r\n    //         if (err && err.response.data) {\r\n    //             return err.response;\r\n    //         }\r\n    //     });\r\n};\r\n\r\n\r\n\r\nfunction* signInUserWithEmailPassword({ payload }) {\r\n    try {\r\n        const signInUser = yield call(signInUserWithEmailPasswordRequest, payload);\r\n        if (signInUser) {\r\n            localStorage.setItem(\"user_id\", payload[0]);\r\n            yield put(userSignInSuccess(payload[0]));\r\n            console.log('Login Successfull')\r\n\r\n        } else {\r\n            console.log('Incorrect Credentials')\r\n        }\r\n    } catch (error) {\r\n    }\r\n}\r\n\r\nfunction* signOut() {\r\n    try {\r\n        yield put(userSignOutSuccess(\"SignOut\"));\r\n        localStorage.removeItem(\"user_id\");\r\n    } catch (error) {\r\n    }\r\n}\r\n\r\nexport function* signInUser() {\r\n    yield takeEvery(SIGNIN_USER, signInUserWithEmailPassword);\r\n}\r\n\r\nexport function* signOutUser() {\r\n    yield takeEvery(SIGNOUT_USER, signOut);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        fork(signInUser),\r\n        fork(signOutUser),\r\n    ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}